AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create IAM roles

Parameters:
  EnvType:
    Type: String
    Default: "dev"
    Description: The environment type (e.g., prod, dev)
  DomainName:
    Type: String
    Description: The name of the domain

Resources:
#Redshift Role
  RedshiftServerlessReadOnlyRole:
    Type: "AWS::IAM::Role"
    Properties: 
      RoleName: "RedshiftServerlessReadOnlyRole"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "redshift.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "RedshiftServerlessReadOnlyPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "redshift-serverless:GetWorkgroup"
                  - "redshift-serverless:ListWorkgroups"
                  - "redshift-serverless:GetNamespace"
                  - "redshift-serverless:ListNamespaces"
                  - "redshift-serverless:GetSnapshot"
                  - "redshift-serverless:ListSnapshots"
                  - "redshift-serverless:GetUsageLimit"
                  - "redshift-serverless:ListUsageLimits"
                  - "redshift-serverless:GetTableRestoreStatus"
                  - "redshift-serverless:ListTableRestoreStatuses"
                  - "redshift-serverless:GetEndpointAccess"
                  - "redshift-serverless:ListEndpointAccess"
                  - "redshift:GetClusterCredentials"
                  - "redshift:DescribeClusters"
                  - "redshift:DescribeTables"
                  - "redshift:DescribeDatabase"
                  - "redshift:ExecuteQuery"
                Resource: "*"

  ### IAM Role for DMS ###
  DMSIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: DMSRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: dms.amazonaws.com
            Action: sts:AssumeRole     
      Policies:
        - PolicyName: DMSAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:GetObject
                  - dms:CreateReplicationSubnetGroup
                  - dms:CreateReplicationTask
                  - dms:DescribeReplicationInstances
                  - dms:DescribeEndpoints
                  - dms:DescribeReplicationTasks
                  - dms:StartReplicationTask
                  - dms:StopReplicationTask
                  - dms:ModifyReplicationTask
                  - dms:DeleteReplicationTask
                  - dms:DescribeReplicationSubnetGroups
                  - dms:DescribeEventSubscriptions
                Resource: 
                  - "*"

### IAM Role for SQS ###     
  MyQueueIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: MyQueueAccessRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: "lambda.amazonaws.com"  # Replace this with the service or entity that will assume the role
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: SQSAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ListQueues
                Resource: 
                   - "*"
### IAM Role for Glue Job ### 
  GlueJobRole:                
    Type: AWS::IAM::Role
    Properties:
      RoleName: 
         Fn::Join:
          - "-"
          - [ "sandbox", !Ref DomainName, !Ref EnvType, "gluejob-role"]       
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                  - s3:DeleteObject
                Resource: '*'
        - PolicyName: CloudwatchAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*' 

Outputs: 
  DMSIAMRole:
    Description: 'Name of the created DMS IAM role'
    Value: !Ref DMSIAMRole
    Export:
      Name: DMSIAMRole
  RedshiftIamRoleName:
    Description: 'Name of the created Redshift role'
    Value: !Ref RedshiftServerlessReadOnlyRole
  RedshiftIamRoleArn:
    Description: 'Name of the created Redshift role'
    Value: !Ref RedshiftServerlessReadOnlyRole.Arn
  MyQueueIAMRole:
    Description: 'Name of the MyQueue IAM Role'
    Value: !Ref MyQueueIAMRole
  GlueJobRoleArn:
    Description: 'Name of the Glue Job Role'
    Value: !GetAtt GlueJobRole.Arn           