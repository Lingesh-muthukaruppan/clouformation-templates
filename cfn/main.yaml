AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an S3 bucket

Parameters:
#S3 Parameters  
  EnvType:
    Type: String
    Default: "dev"
    Description: The environment type (e.g., prod, dev)
  DomainName:
    Type: String
    Description: The name of the domain
  BucketFilePath:
    Type: String
    Description: bucket yaml path
#GlueDB Parameters
  DatabaseName:
    Type: String
    Default: 'tpg-glue-db'  
    Description: 'Name of the Glue Database'
  GlueDBPath:
    Type: String
    Description: Database yaml path    

#Crawler Parameters
  CrawlerName:
    Type: String
    Default: 'tpg-glue-crawler'
    Description: 'Name of the Glue Crawler'
  GlueCrawlerPath:
    Type: String
    Description: Crawler yaml path    

#Dynamo DB Parameters
  TableName:
    Type: String
    Description: 'Name of the DynamoDB table'
    Default: 'tpg-dynamodb-table'
  ReadCapacityUnits:
    Type: Number
    Description: 'Read capacity units for the table'
    Default: 5
    MinValue: 1
  WriteCapacityUnits:
    Type: Number
    Description: 'Write capacity units for the table'
    Default: 5
    MinValue: 1
  DynamoDBStackUrl:
    Type: String
    Description: 'Dynamo DB S3 URL of the nested stack template'

  #Redshift Parameters
  RedshiftiamRoleUrl:
    Type: String
    Description: 'Name of the Redshift Iam Role' 

Resources:
  s3buckets:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref BucketFilePath
      Parameters:
        EnvType: !Ref EnvType
        DomainName: !Ref DomainName

  GlueDatabase:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref GlueDBPath
      Parameters:
        DatabaseName: !Ref DatabaseName

  GlueCrawler:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref GlueCrawlerPath
      Parameters:
        CrawlerName: !Ref CrawlerName
        DatabaseName: !GetAtt GlueDatabase.Outputs.DatabaseName
        S3TargetPath: !GetAtt s3buckets.Outputs.LandingBucketName

  DynamoDBStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref DynamoDBStackUrl
      Parameters:
        TableName: !Ref TableName
        ReadCapacityUnits: !Ref ReadCapacityUnits
        WriteCapacityUnits: !Ref WriteCapacityUnits

  RedshiftiamRoleStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref RedshiftiamRoleUrl     

Outputs:
  LandingBucketName:
    Description: The name of the Landing S3 bucket
    Value: !GetAtt s3buckets.Outputs.LandingBucketName
  RawS3BucketName:
    Description: The name of the Raw S3 bucket
    Value: !GetAtt s3buckets.Outputs.RawS3BucketName
  EnrichedS3BucketName:
    Description: The name of the Enriched S3 bucket
    Value: !GetAtt s3buckets.Outputs.EnrichedS3BucketName
  DatabaseName:
    Description: 'Name of the Glue Database'
    Value:  !GetAtt GlueDatabase.Outputs.DatabaseName
  CrawlerName:
    Description: 'Name of the created Glue Crawler'
    Value:  !GetAtt GlueCrawler.Outputs.CrawlerName
  TableName:
    Description: 'Name of the created DynamoDB table'
    Value: !GetAtt DynamoDBStack.Outputs.TableName
  RedshiftIamRoleName:
    Description: 'Name of the created Redshift IAM role'
    Value: !GetAtt RedshiftiamRoleStack.Outputs.RedshiftIamRoleName  


